@model XyTech.Models.tb_floor

@{
    ViewBag.Title = "Details_DL1";
}

<style>
    .copy-text {
        padding: 10px;
        font-size: 18px;
        color: #555;
        border: none;
        outline: none;
    }

        .copy-text button {
            padding: 10px;
            background: #5784f5;
            color: #fff;
            font-size: 18px;
            border: none;
            outline: none;
            border-radius: 10px;
            cursor: pointer;
        }
</style>

<p class="card-title mb-0" style="font-size: x-large; font-weight:bold">Floor Information</p>

<br />

<div>
    <img class="floorlayout" src="~/Content/assets/images/floor_layout_trim/DL1-1.jpeg" alt="DL1" usemap="#DL1map">

    <map name="DL1map">
        <area shape="rect" coords="43,29,121,87" alt="Room1" href="@Url.Action("Details", "Room", new { id = 1 })" id="r_id">
        <area shape="rect" coords="45,91,117,151" alt="Room2" href="@Url.Action("Details", "Room", new { id = 2 })" id="r_id">
        <area shape="rect" coords="45,156,117,208" alt="Room3" href="@Url.Action("Details", "Room", new { id = 3 })" id="r_id">
        <area shape="rect" coords="45,218,116,272" alt="Room4" href="@Url.Action("Details", "Room", new { id = 4 })" id="r_id">
        <area shape="rect" coords="44,278,115,334" alt="Room5" href="@Url.Action("Details", "Room", new { id = 5 })" id="r_id">
        <area shape="rect" coords="46,341,117,396" alt="Room6" href="@Url.Action("Details", "Room", new { id = 6 })" id="r_id">
        <area shape="rect" coords="44,404,118,456" alt="Room7" href="@Url.Action("Details", "Room", new { id = 7 })" id="r_id">
        <area shape="rect" coords="47,469,116,520" alt="Room8" href="@Url.Action("Details", "Room", new { id = 8 })" id="r_id">
        <area shape="rect" coords="45,528,115,580" alt="Room9" href="@Url.Action("Details", "Room", new { id = 9 })" id="r_id">
        <area shape="poly" coords="45,588,93,586,103,605,118,615,118,644,46,644" alt="Room10" href="@Url.Action("Details", "Room", new { id = 10 })" id="r_id">
        <area shape="poly" coords="147,512,223,512,223,569,172,567,148,542,146,530" alt="Room11" href="@Url.Action("Details", "Room", new { id = 11 })" id="r_id">
        <area shape="rect" coords="149,428,222,504" alt="Room12" href="@Url.Action("Details", "Room", new { id = 12 })" id="r_id">
        <area shape="rect" coords="149,129,222,210" alt="Room13" href="@Url.Action("Details", "Room", new { id = 13 })" id="r_id">
        <area shape="rect" coords="147,29,222,122" alt="Room14" href="@Url.Action("Details", "Room", new { id = 14 })" id="r_id">
    </map>
</div>

<div class="row">
    <div class="col-7 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <form class="forms-sample">
                    <div class="form-group row">
                        <label for="exampleInputUsername2" class="col-sm-4 col-form-label">Floor Name</label>
                        <div class="col-sm-7 col-form-label">
                            @Html.DisplayFor(model => model.fl_bname)
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="exampleInputMobile" class="col-sm-4 col-form-label">Address</label>
                        <div class="col-sm-7 col-form-label">
                            @Html.DisplayFor(model => model.fl_address)
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="exampleInputPassword2" class="col-sm-4 col-form-label">Landlord Name</label>
                        <div class="col-sm-7 col-form-label">
                            @Html.DisplayFor(model => model.tb_landlord.l_name)
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="exampleInputConfirmPassword2" class="col-sm-4 col-form-label">WiFi Password</label>
                        <div class="col-sm-7 col-form-label">
                            @Html.DisplayFor(model => model.fl_wifipwd)
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="exampleInputConfirmPassword2" class="col-sm-4 col-form-label">Modem IP</label>
                        <div class="col-sm-7 col-form-label">
                            @Html.DisplayFor(model => model.fl_modemip)
                        </div>
                    </div>

                    <div style="margin-top: 25px;">
                        @Html.ActionLink("Edit", "Edit", new { id = Model.fl_id }, new { @class = "btn btn-primary btn-rounded btn-fw" })
                        @Html.ActionLink("See Rooms", "Index", "Room", new { floorFilter = Model.fl_id }, new { @class = "btn btn-dark btn-rounded btn-fw" })
                        @Html.ActionLink("Back to Floor List", "FloorList", null, new { @class = "btn btn-light btn-rounded btn-fw" })
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="col-md-5 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Preset Message for Tenants</h4>
                <div class="form-group row">
                    <label class="col-sm-9 col-form-label">Potential</label>
                    @using (Html.BeginForm())
                    {
                        @Html.Hidden("fl_preset_potential", Model.fl_preset_potential)
                        <button type="button" onclick="copyToClipboard()" class="copy-text mdi mdi-content-copy">Copy</button>
                    }

                    <div class="col-sm-12 col-form-label">
                        <div class="copy-text">
                            @Html.TextAreaFor(model => model.fl_preset_potential, new { @class = "form-control", id = "copy", @readonly = "readonly", rows = 4 })
                        </div>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-9 col-form-label">Current</label>
                    @using (Html.BeginForm())
                    {
                        @Html.Hidden("fl_preset_current", Model.fl_preset_current)
                        <button type="button" onclick="copyToClipboard1()" class="copy-text mdi mdi-content-copy">Copy</button>
                    }
                    <div class="col-sm-12 col-form-label">
                        <div class="copy-text">
                            @Html.TextAreaFor(model => model.fl_preset_current, new { @class = "form-control", id = "copy", @readonly = "readonly", rows = 4 })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <h4 class="card-title">Room Availability</h4>
                    <button class="copy-text mdi mdi-content-copy" onclick="copyTableToClipboard3()">Copy</button>
                </div>
                <br />
                <div class="table-responsive">
                    <table id="dataTable" class="display expandable-table" style="width:100%">
                        <thead>
                            <tr>
                                <th>Room No.</th>
                                <th style="text-align: center">Room Availability</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in ViewBag.room)
                            {
                                <tr>
                                    <td>
                                        @item.r_no
                                    </td>
                                    <td style="text-align:center">
                                        @if (item.r_availability == 1)
                                        {
                                            <div class="badge badge-success">
                                                Available
                                            </div>
                                        }
                                        else if (item.r_availability == 0)
                                        {
                                            <div class="badge badge-danger">
                                                Unavailable
                                            </div>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function copyToClipboard() {
        var input = document.createElement("input");
        input.setAttribute("value", document.getElementById("fl_preset_potential").value);
        document.body.appendChild(input);
        input.select();
        document.execCommand("copy");
        document.body.removeChild(input);
        alert("Copied to clipboard!");
    }

    function copyToClipboard1() {
        var input = document.createElement("input");
        input.setAttribute("value", document.getElementById("fl_preset_current").value);
        document.body.appendChild(input);
        input.select();
        document.execCommand("copy");
        document.body.removeChild(input);
        alert("Copied to clipboard!");
    }

    function copyTableToClipboard3() {
        const table = document.getElementById("dataTable");
        const range = document.createRange();
        range.selectNode(table);
        window.getSelection().addRange(range);

        try {
            const successful = document.execCommand('copy');
            const message = successful ? 'Table copied to clipboard!' : 'Unable to copy table.';
            alert(message);
        } catch (err) {
            console.log('Unable to copy table:', err);
        }

        window.getSelection().removeAllRanges();
    }
</script>







