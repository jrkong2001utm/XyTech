@model XyTech.Models.tb_finance

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit Finance</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.Hidden("f_id")

        <div class="form-group">
            @Html.LabelFor(model => model.f_transactiontype, "Transaction Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("f_transactiontype", new List<SelectListItem>
                {
                    new SelectListItem { Text = "Inflow", Value = "Inflow", Selected = (Model.f_transactiontype == "Inflow") },
                    new SelectListItem { Text = "Outflow", Value = "Outflow", Selected = (Model.f_transactiontype == "Outflow") }
                }, new { @class = "form-control", @required = true })
                @Html.ValidationMessageFor(model => model.f_transactiontype, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.f_floor, "Transaction Floor", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("f_floor", null, "General", new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.f_floor, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.Hidden("f_user")

        <div class="form-group">
            @Html.LabelFor(model => model.f_transaction, "Amount", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.f_transaction, new { htmlAttributes = new { @class = "form-control", @type = "number", @stepwise = "0.01", @required = true } })
                @Html.ValidationMessageFor(model => model.f_transaction, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.f_desc, "Details", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.f_desc, new { htmlAttributes = new { @class = "form-control", @required = true } })
                @Html.ValidationMessageFor(model => model.f_desc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.f_paymentmethod, "Bank/Cash", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("f_paymentmethod", new List<SelectListItem>
                {
                    new SelectListItem { Text = "Bank", Value = "Bank", Selected = (Model.f_paymentmethod == "Bank") },
                    new SelectListItem { Text = "Cash", Value = "Cash", Selected = (Model.f_paymentmethod == "Cash") }
                }, new { @class = "form-control", @required = true })
                @Html.ValidationMessageFor(model => model.f_paymentmethod, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.f_date, "Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.f_date, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       @type = "date",
                       @required = true,
                       @Value = Model.f_date.ToString("yyyy-MM-dd")
                   }
               })
                @Html.ValidationMessageFor(model => model.f_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.f_receipt, "Receipt (if any)", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.f_receipt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.f_receipt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>



