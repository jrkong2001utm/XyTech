@model IEnumerable<XyTech.Models.tb_finance>

<style>

    .dt-buttons {
        margin-bottom: 10px;
    }

    .dt-buttons button:hover {
        opacity: 0.8;
    }

    .dt-buttons button {
        margin-left: 5px;
        padding: 6px 12px;
        border: none;
        border-radius: 4px;
        font-size: 14px;
        cursor: pointer;
    }

    .dt-buttons .buttons-csv {
        background-color: cornflowerblue;
        color: white;
    }

    .dt-buttons .buttons-excel {
        background-color: seagreen;
        color: white;
    }

    .dt-buttons .buttons-pdf {
        background-color: red;
        color: white;
    }

    .dt-buttons .buttons-print {
        background-color: #607d8b;
        color: white;
    }
</style>

<div class="row">
    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                @if (ViewBag.Message == "Transaction is successfully saved!")
                {
                    <div class="alert alert-success">
                        <strong>@ViewBag.Message</strong>
                        <button type="button" class="close" data-dismiss="alert">
                            <span class="mdi mdi-close"></span>
                        </button>
                    </div>
                }
                @if (ViewBag.Message == "Transaction is deleted.")
                {
                    <div class="alert alert-danger">
                        <strong>@ViewBag.Message</strong>
                        <button type="button" class="close" data-dismiss="alert">
                            <span class="mdi mdi-close"></span>
                        </button>
                    </div>
                }
                <div class="d-flex justify-content-between">
                    <p class="card-title mb-0" style="font-size: x-large;">Finance</p>

                    <!--Print PDF Button-->
                    @*<button id="exportPDFButton" class="btn btn-primary" type="button" onclick="pdf()">Export to PDF</button>*@

                    @Html.ActionLink("New Transaction", "Create", null, new { @class = "btn btn-success btn-rounded" })
                </div>

                <div class="row mb-3">
                    <div class="col-md-4">
                        <div class="input-group">
                            <input type="text" id="dateRangePicker" class="form-control" autocomplete="off" placeholder="Select Date To View" />
                            <div class="input-group-append">
                            </div>
                        </div>
                    </div>

                    <div class="col-3">
                        <form id="floorFilterForm">
                            @Html.DropDownList("floorFilter", ViewData["FloorFilter"] as IEnumerable<SelectListItem>, new { @class = "form-control", id = "floorFilter" })
                        </form>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="dataTable" class="display expandable-table" style="width:100%">
                            <thead>
                                <tr>
                                    <th>
                                        Year
                                    </th>
                                    <th>
                                        Month
                                    </th>
                                    <th>
                                        Day
                                    </th>
                                    <th>
                                        Inflow
                                    </th>
                                    <th>
                                        Outflow
                                    </th>
                                    <th>
                                        Bank/Cash
                                    </th>
                                    <th>
                                        Details
                                    </th>
                                    <th>
                                        Floor ID
                                    </th>
                                    <th>
                                        Action
                                    </th>
                                </tr>
                            </thead>
                            @*<tbody>
                                    @foreach (var item in Model)
                                    {
                                        // Extract year, month, and day from f_date
                                        var year = item.f_date.Year;
                                        var month = item.f_date.Month;
                                        var day = item.f_date.Day;

                                        <tr>
                                            <td>
                                                @year
                                            </td>
                                            <td>
                                                @month
                                            </td>
                                            <td>
                                                @day
                                            </td>
                                            <td class="text-success">
                                                @if (item.f_transactiontype == "Inflow")
                                                {
                                                    <span class="inflow-amount">@item.f_transaction</span>
                                                }
                                            </td>
                                            <td class="text-danger">
                                                @if (item.f_transactiontype == "Outflow")
                                                {
                                                    <span class="inflow-amount">@item.f_transaction</span>
                                                }
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.f_paymentmethod)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.f_desc)
                                            </td>
                                            @if (item.tb_floor?.fl_id == null)
                                            {
                                                <td>
                                                    General
                                                </td>
                                            }
                                            else
                                            {
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.tb_floor.fl_bname)
                                                </td>
                                            }
                                            <td>
                                                <a href="@Url.Action("Edit", new { id = item.f_id })" class="btn btn-link" title="edit">
                                                    <i class="fa fa-edit text-primary"></i>
                                                </a>
                                                <a href="@Url.Action("Details", new { id = item.f_id })" class="btn btn-link" title="details">
                                                    <i class="fa fa-info-circle text-info"></i>
                                                </a>
                                                <a href="@Url.Action("Delete", new { id = item.f_id })" class="btn btn-link" title="delete">
                                                    <i class="fa fa-trash text-danger"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>*@
                        </table>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

@section Scripts {

    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.3.6/js/dataTables.buttons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.3.6/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.3.6/js/buttons.print.min.js"></script>



    <script src="https://cdn.jsdelivr.net/npm/daterangepicker@3.1.0/moment.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/daterangepicker@3.1.0/daterangepicker.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/daterangepicker@3.1.0/daterangepicker.css" rel="stylesheet" />

    <script>
        $(document).ready(function () {
            //$('#dataTable').DataTable();



            //var allOption = document.querySelector('#floorFilter option[value="0"]');
            //allOption.disabled = true;

            @*document.getElementById("floorFilter").addEventListener("change", function () {
                //this.form.submit();
            //    table.ajax.url('@Url.Action("GetFilteredData", "Finance")?startDate=' + startDate + '&endDate=' + endDate).load();
            });*@

            var table = $('#dataTable').DataTable({
                ajax: {
                    url: '@Url.Action("GetFilteredData", "Finance")',
                    data: function (d) {
                        d.startDate = $('#startDate').val();
                        d.endDate = $('#endDate').val();
                        d.floorFilter = $('#floorFilter').val();
                    },
                    dataSrc: ''
                },
                columns: [
                    { data: 'f_year' },
                    { data: 'f_month' },
                    { data: 'f_day' },
                    {
                        data: 'f_type',
                        render: function (data, type, row) {
                            if (data == "Inflow") {
                                return '<span class="text-success inflow-amount">' + parseFloat(row.f_transaction).toFixed(2) + '</span>';
                            } else {
                                return '';
                            }
                        }
                    },
                    {
                        data: 'f_type',
                        render: function (data, type, row) {
                            if (data == "Outflow") {
                                return '<span class="text-danger inflow-amount">' + parseFloat(row.f_transaction).toFixed(2) + '</span>';
                            } else {
                                return '';
                            }
                        }
                    },
                    { data: 'f_paymentmethod' },
                    { data: 'f_desc' },
                    {
                        data: 'f_floor',
                        render: function (data, type, row) {
                            if (data == null) {
                                return "General";
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return '<a href="@Url.Action("Edit", "Finance")/' + row.f_id + '" class="btn btn-link" title="edit"><i class="fa fa-edit text-primary"></i></a>' +
                                '<a href="@Url.Action("Details", "Finance")/' + row.f_id + '" class="btn btn-link" title="details"><i class="fa fa-info-circle text-info"></i></a>' +
                                '<a href="@Url.Action("Delete", "Finance")/' + row.f_id + '" class="btn btn-link" title="delete"><i class="fa fa-trash text-danger"></i></a>';
                        }
                    }
                ],
                dom: '<"row"<"col-sm-3"l><"col-sm-6"f><"col-sm-3"B>>tip',
                buttons: [
                    {
                        extend: 'csv',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6, 7]
                        }
                    },
                    {
                        extend: 'excel',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6, 7]
                        }
                    },
                    {
                        extend: 'pdf',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6, 7]
                        }
                    },
                    {
                        extend: 'print',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6, 7]
                        }
                    },
                ]

            });


            $('#dateRangePicker').daterangepicker({
                autoUpdateInput: false,
                locale: {
                    cancelLabel: 'Clear',
                    format: 'YYYY-MM-DD'
                }
            });

            $('#dateRangePicker').on('apply.daterangepicker', function (ev, picker) {
                var startDate = picker.startDate.format('YYYY-MM-DD');
                var endDate = picker.endDate.format('YYYY-MM-DD');
                table.ajax.url('@Url.Action("GetFilteredData", "Finance")?startDate=' + startDate + '&endDate=' + endDate).load();

                $(this).val(startDate + "  -  " + endDate);
            });

            $('#dateRangePicker').on('cancel.daterangepicker', function (ev, picker) {
                $(this).val('');
                picker.setStartDate(moment());
                picker.setEndDate(moment());
                table.ajax.url('@Url.Action("GetFilteredData", "Finance")').load();
            });

            document.getElementById("floorFilter").addEventListener("change", function () {
                table.ajax.reload();
            });
        });
    </script>
}

