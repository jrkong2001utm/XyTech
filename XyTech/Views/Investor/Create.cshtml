@model XyTech.Models.tb_investor

@{
    ViewBag.Title = "Create";
    var username = TempData["InvestorUsername"] as string;
    int userId = 0; // Initialize the user ID variable
    if (!string.IsNullOrEmpty(username))
    {
        ViewBag.Username = username;
        using (var context = new XyTech.Models.db_XyTechEntities())
        {
            var user = context.tb_user.FirstOrDefault(u => u.u_username == username);
            if (user != null)
            {
                userId = user.u_id;
            }
        }
    }
}


<div id="createInvestorModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Create New Investor</h2>
            </div>
            @using (Html.BeginForm("Create", "Investor", FormMethod.Post))
            {
                <div class="modal-body">

                    @Html.AntiForgeryToken()

                    <table class="table table-striped table-borderless">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <tr>
                            <td>@Html.LabelFor(model => model.i_user, "User ID")</td>
                            <td>@Html.TextBoxFor(model => model.i_user, new { @class = "form-control", @readonly = "readonly", Value = userId })</td>
                            <td>@Html.ValidationMessageFor(model => model.i_user, "", new { @class = "text-danger" })</td>
                        </tr>

                        <tr>
                            <td>@Html.LabelFor(model => model.tb_user.u_username, "Username")</td>
                            <td>@Html.TextBoxFor(model => model.tb_user.u_username, new { @class = "form-control", @readonly = "readonly", Value = ViewBag.Username })</td>
                            <td>@Html.ValidationMessageFor(model => model.tb_user.u_username, "", new { @class = "text-danger" })</td>
                        </tr>

                        <tr>
                            <td>@Html.LabelFor(model => model.i_lot, "Lot ID")</td>
                            <td>@Html.EditorFor(model => model.i_lot, new { htmlAttributes = new { @class = "form-control", required = true, type = "number", step = "1" } })</td>
                            @*<td>@Html.ValidationMessageFor(model => model.i_lot, "", new { @class = "text-danger" })</td>*@
                        </tr>

                        <tr>
                            <td>@Html.LabelFor(model => model.i_amount, "Amount")</td>
                            <td>@Html.TextBoxFor(model => model.i_amount, new { @class = "form-control", required = true, type = "number", min = "10000", max = "50000" })</td>
                            @*<td>@Html.ValidationMessageFor(model => model.i_amount, "", new { @class = "text-danger" })</td>*@
                        </tr>

                            @Html.DropDownList("i_active", new List<SelectListItem>
                            {
                                new SelectListItem { Text = "active", Value = "active", Selected = true},
                                new SelectListItem { Text = "inactive", Value = "inactive" }
                            }, new { @class = "form-control", @hidden = true })
                            @Html.HiddenFor(model => model.i_active, new { @value = "active" })
                    </table>


                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary mr-2">Create</button>
                </div>
            }
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#createInvestorModal').modal({ backdrop: 'static', keyboard: false });

        $('#tb_user_u_username').val('@ViewBag.Username');
    });
</script>

@*@using (Html.BeginForm("Create", "Investor", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.i_user, "User ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.i_user, new { @class = "form-control", @readonly = "readonly", Value = userId })
                @Html.ValidationMessageFor(model => model.i_user, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tb_user.u_username, "Username", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.tb_user.u_username, new { @class = "form-control", @readonly = "readonly", Value = ViewBag.Username })
                @Html.ValidationMessageFor(model => model.tb_user.u_username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.i_lot, "Lot ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.i_lot, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.i_lot, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.i_amount, "Amount", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.i_amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.i_amount, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.DropDownList("i_active", new List<SelectListItem>
            {
                new SelectListItem { Text = "active", Value = "active", Selected = true},
                new SelectListItem { Text = "inactive", Value = "inactive" }
            }, new { @class = "form-control", @hidden = true })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.HiddenFor(model => model.i_active, new { @value = "active" })
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <script>
        $(document).ready(function () {
            $('#tb_user_u_username').val('@ViewBag.Username');
        });
    </script>
    @Html.ActionLink("Back to List", "Index")
</div>*@


