@model XyTech.Models.tb_landlord

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Add New Landlord</h4>
                <p class="card-description">
                    Add a new landlord by filling the form below.
                </p>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <form class="forms-sample">
                    <div class="form-group row">
                        <label for="l_name" class="col-sm-3 col-form-label">Name</label>
                        <div class="col-sm-9">
                            @Html.EditorFor(model => model.l_name, new { htmlAttributes = new { @class = "form-control", placeholder = "Landlord's name" } })
                            @Html.ValidationMessageFor(model => model.l_name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="l_contact" class="col-sm-3 col-form-label">Contact Number</label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control" id="l_contact" placeholder="Contact number of landlord">
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="l_fee" class="col-sm-3 col-form-label">Amount of rental (RM)</label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control" id="l_fee" placeholder="Rental fee per month (RM)">
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="l_due" class="col-sm-3 col-form-label">Rental due date</label>
                        <div class="col-sm-9">
                            <input type="password" class="form-control" id="l_due" placeholder="Password">
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="l_bank" class="col-sm-3 col-form-label">Bank account number</label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control" id="l_bank" placeholder="Bank account number">
                        </div>
                    </div>

                    <button type="submit" class="btn btn-primary mr-2">Submit</button>
                    <button class="btn btn-light">Cancel</button>
                </form>
            </div>
        </div>
    </div>
}


    <!--
    <h2>Create</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>tb_landlord</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.l_id, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.l_id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.l_id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.l_name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.l_name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.l_name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.l_phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.l_phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.l_phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.l_fee, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.l_fee, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.l_fee, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.l_due, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.l_due, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.l_due, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.l_bank, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.l_bank, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.l_bank, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.l_active, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.l_active, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.l_active, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
    -->
