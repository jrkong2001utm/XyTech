@model XyTech.Models.tb_tenant

@{
    ViewBag.Title = "Create";
}


<h2>Create</h2>


@using (Html.BeginForm("Create", "Tenant", FormMethod.Post, new { enctype = "multipart/form-data", id = "myForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Tenant</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.t_name, "Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.t_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.t_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.t_ic, "IC Number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.t_ic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.t_ic, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.t_uploadic, "Upload IC Picture", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("icfile", "", new { type = "file", @class = "form-control", accept = "image/*" })
                @Html.ValidationMessageFor(model => model.t_uploadic, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.t_contract, "Uplaod Contract", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("contractfile", "", new { type = "file", @class = "form-control", accept = "image/*" })
                @Html.ValidationMessageFor(model => model.t_contract, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.t_phone, "Phone Number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.t_phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.t_phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.t_emergency, "Emergency Contact", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.t_emergency, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.t_emergency, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.t_indate, "Check In Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <i class="mdi mdi-calendar-plus menu-icon"></i>
            <div class="col-md-10">
                @Html.EditorFor(model => model.t_indate, new { htmlAttributes = new { @class = "form-control datepicker", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.t_indate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.t_outdate, "Check Out Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.t_outdate, new { htmlAttributes = new { @class = "form-control datepicker", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.t_outdate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.t_outsession, "Out Session", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("t_outsession", new List<SelectListItem>
                {
                    new SelectListItem { Text = "-- Select Out Session --", Selected = true, Disabled = true },
                    new SelectListItem { Text = "Morning", Value = "Morning" },
                    new SelectListItem { Text = "Afternoon", Value = "Afternoon" },
                    new SelectListItem { Text = "Night", Value = "Night" },
                    new SelectListItem { Text = "Wait", Value = "Wait" }
                }, new { @class = "form-control", @required = true })
                @Html.ValidationMessageFor(model => model.t_outsession, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.t_siri, "Siri Number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.t_siri, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.t_siri, "", new { @class = "text-danger" })
            </div>
        </div>

        <input type="number" id="RoomPrice" name="RoomPrice" value="@ViewBag.RoomPrice" hidden/>
        <input type="number" id="RoomID" name="RoomID" value="@ViewBag.RoomID" hidden/>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" class="btn btn-primary btn-rounded btn-fw" data-toggle="modal" data-target="#myModal">
                    Create
                </button>
                |
                <span class="btn btn-dark btn-rounded btn-fw">
                    @Html.ActionLink("Back to List", "Index")
                </span>
            </div>
        </div>

    </div>

    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Deposit and Payment Method</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="DepositAmount" class="control-label">Deposit Amount</label>
                        <div>
                            <input type="text" id="DepositAmount" name="DepositAmount" class="form-control" required />
                            <span class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="PaymentMethod" class="control-label">Payment Method</label>
                        <div>
                            <select id="PaymentMethod" name="PaymentMethod" class="form-control" required>
                                <option value="" selected disabled>Select Payment Method</option>
                                <option value="Bank">Bank</option>
                                <option value="Cash">Cash</option>
                            </select>
                            <span class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="submit" class="btn btn-secondary" id="btnNoDeposit">No Deposit</button>
                    <button type="submit" class="btn btn-primary" id="submitButton">Create</button>
                </div>
            </div>
        </div>
    </div>


}

@section Scripts {

    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.13.2.min.js"></script>
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />

    <script type="text/javascript">
        $("#btnNoDeposit").click(function () {
            // Set deposit amount to 0
            $("#DepositAmount").val(0);

            // Remove the required attribute from the payment method dropdown
            $("#PaymentMethod").removeAttr("required");

            // Submit the form
            $("#myModal").modal("hide");
        });

        $(document).ready(function () {
            $('#t_indate').datepicker({
                dateFormat: "dd/MM/yy",
                changeMonth: true,
                changeYear: true,
                minDate: "0D",
                onSelect: function (selected) {
                    var dt = new Date(selected);
                    dt.setDate(dt.getDate() + 1);
                    $("#t_outdate").datepicker("option", "minDate", dt);
                }
            });

            $('#t_outdate').datepicker({
                dateFormat: "dd/MM/yy",
                changeMonth: true,
                changeYear: true,
                onSelect: function (selected) {
                    var dt = new Date(selected);
                    dt.setDate(dt.getDate() - 1);
                    $("#t_indate").datepicker("option", "maxDate", dt);
                }
            });

            $("#fl_id").change(function () {
                var selectedFloorId = $(this).val();
                var roomNumberDropdown = $("#t_room");

                $.ajax({
                    url: '@Url.Action("GetRoomNumbers", "Tenant")',
                    type: 'POST',
                    data: { floorId: selectedFloorId },
                    dataType: 'json',
                    success: function (data) {
                        roomNumberDropdown.empty();
                        $.each(data, function (index, item) {
                            roomNumberDropdown.append($('<option/>', {
                                value: item.Value,
                                text: item.Text
                            }));
                        });
                    },
                    error: function () {
                        alert('Error occurred while retrieving room numbers.');
                    }
                });
            });

            
        });
    </script>
}
