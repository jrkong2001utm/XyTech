@model XyTech.Models.tb_user

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Add New User</h4>
                <p class="card-description">
                    Add new user's information by filling the form below.
                </p>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <form class="forms-sample">
                <div class="form-group row">
                    @Html.LabelFor(model => model.u_username, "Username", htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.u_username, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.u_username, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.HiddenFor(model => model.u_id)
                @Html.HiddenFor(model => model.u_pwd)

                <div class="form-group row">
                    @Html.LabelFor(model => model.u_email, "Email", htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.u_email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.u_email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.u_phone, "Phone Number", htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.u_phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.u_phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.u_usertype, "User Type", htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.DropDownList("u_usertype", new List<SelectListItem>
                        {
                            new SelectListItem { Text = "-- Select User Type --", Selected = true, Disabled = true },
                            new SelectListItem { Text = "Admin", Value = "Admin" },
                            new SelectListItem { Text = "Investor", Value = "Investor" }
                        }, new { @class = "form-control", @required = true })
                        @Html.ValidationMessageFor(model => model.u_usertype, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.u_active, "User Status", htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.DropDownList("u_active", new List<SelectListItem>
                        {
                            new SelectListItem { Text = "active", Value = "active"},
                            new SelectListItem { Text = "inactive", Value = "inactive" }
                        }, new { @class = "form-control", @required = true })
                        @Html.ValidationMessageFor(model => model.u_active, "", new { @class = "text-danger" })
                    </div>
                </div>

                <button type="submit" class="btn btn-primary mr-2">Save</button>
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-light" })

            </form>

            </div>
        </div>
    </div>
}

