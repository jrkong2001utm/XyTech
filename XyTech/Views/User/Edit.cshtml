@model XyTech.Models.tb_user

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>tb_user</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.u_username, "Username", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.u_username, new { htmlAttributes = new { @class = "form-control", @readonly=true } })
            @Html.ValidationMessageFor(model => model.u_username, "", new { @class = "text-danger" })
        </div>
    </div>


    @Html.HiddenFor(model => model.u_pwd, new { htmlAttributes = new { @class = "form-control" } })


    <div class="form-group">
        @Html.LabelFor(model => model.u_email, "Email", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.u_email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.u_email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.u_phone, "Phone Number", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.u_phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.u_phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.u_usertype, "User Type", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("u_usertype", new List<SelectListItem>
            {
                new SelectListItem { Text = "Admin", Value = "Admin", Selected = Model.u_usertype == "Admin"},
                new SelectListItem { Text = "Investor", Value = "Investor", Selected = Model.u_usertype == "Investor"}
            }, new { @class = "form-control", @required = true })
            @Html.ValidationMessageFor(model => model.u_usertype, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.u_active, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("u_active", new List<SelectListItem>
            {
                new SelectListItem { Text = "active", Value = "active" },
                new SelectListItem { Text = "inactive", Value = "inactive" }
            }, new { @class = "form-control", @required = true })
            @Html.ValidationMessageFor(model => model.u_active, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
